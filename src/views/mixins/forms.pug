- const getInputName = (f, property) => `${f.name}[${property}]`

mixin formFor(f, options = {})
  .row.justify-content-center.pb-5
    .col-12.col-lg-6.col-xl-4.bg-faded.p-4.m-4
      form(action=_.get(options, 'url') method=_.get(options, 'method', 'get'))
        h2(class='mb-4')= _.get(options, 'title') || ''
        block

mixin input(f, property, options = { as: 'text' })
  - const value = f.object[property] === undefined ? '' : f.object[property]
  .form-group(class=(f.errors[property] && 'has-danger'))
    label= options['label'] || property
    input(name=getInputName(f, property) class='form-control' type=options['as'] value=`${value}`)
    if f.errors[property]
      .form-control-feedback= f.errors[property].map(({ message }) => message).join('. ')

mixin button(f, text = 'Save', type = 'submit')
  .form-group
    input(class='mt-4 btn btn-primary-outline btn-primary btn-block' type= `${type}` value=`${text}`)
